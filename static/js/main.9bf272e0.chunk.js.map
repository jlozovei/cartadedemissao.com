{"version":3,"sources":["assets/styled/reset.js","assets/styled/custom.js","components/Container/styled.js","components/Container/index.js","components/Column/styled.js","components/Column/index.js","components/Header/styled.js","components/Header/index.js","components/Form/styled.js","components/Form/sub/Field.js","components/Form/index.js","components/Letter/styled.js","constants/months.js","helpers/randomInt.js","components/Letter/index.js","App.js","index.js"],"names":["Reset","createGlobalStyle","Custom","StyledContainer","styled","div","Container","children","StyledColumn","Column","StyledHeader","header","Header","colors","default","active","error","StyledForm","form","StyledLabel","label","StyledTextInput","input","StyledRadioGroup","StyledRadioLabel","StyledField","props","css","Field","type","hasChoices","choices","Fragment","map","choice","index","value","name","ref","key","htmlFor","id","Form","onSubmit","fields","data-testid","field","StyledLetter","article","visible","months","randomInt","min","max","Math","floor","random","Letter","user","handleLetterVisibility","dateString","Date","getDate","getMonth","getFullYear","onClick","intros","length","company","string","reasons","reason","replace","role","toUpperCase","renderReason","notice","Boolean","acknowledgement","acknowledgements","className","App","useForm","register","handleSubmit","errors","useState","setUser","isLetterVisible","setIsLetterVisible","useEffect","ReactGA","pageview","data","event","category","action","placeholder","required","isVisible","isLocal","window","location","href","includes","initialize","testMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bf272e0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const Reset = createGlobalStyle`\n  *,\n  :before,\n  :after {\n    box-sizing: border-box;\n  }\n\n  :before,\n  :after {\n    display: none;\n    content: '';\n  }\n\n  html,\n  body {\n    height: auto;\n    min-height: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  body {\n    min-height: 100vh;\n    font-size: 16px;\n    line-height: calc(100% + 8px);\n  }\n\n  html,\n  body,\n  ul,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  li {\n    line-height: calc(100% + 8px);\n  }\n\n  li {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n    \n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const Custom = createGlobalStyle`\n  body,\n  .root {\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n    justify-content: flex-start;\n    background-color: #f1f2f3;\n  }\n\n  body,\n  form * {\n    font-family: 'Jost', sans-serif;\n  }\n\n  .root {\n    flex: 1;\n  }\n\n  a {\n    color: #286fde;\n  }\n\n  p,\n  li {\n    a {\n      font-weight: bold;\n    }\n  }\n\n  p {\n    & + p {\n      margin-top: 0.5rem;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  width: 90%;\n  max-width: 1280px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 991px) {\n    flex-flow: row wrap;\n    align-items: stretch;\n    justify-content: space-between;\n  }\n`;\n","import React from 'react';\n\nimport { StyledContainer } from './styled';\n\nconst Container = ({ children }) => {\n  return <StyledContainer>{children}</StyledContainer>;\n};\n\nexport default Container;\n","import styled from 'styled-components';\n\nexport const StyledColumn = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex-basis: 100%;\n  width: 100%;\n  padding: 1rem 0;\n\n  @media screen and (min-width: 991px) {\n    flex-basis: 50%;\n    width: 50%;\n    padding: 1rem;\n  }\n`;\n","import React from 'react';\n\nimport { StyledColumn } from './styled';\n\nconst Column = ({ children }) => {\n  return <StyledColumn>{children}</StyledColumn>;\n};\n\nexport default Column;\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.header`\n  margin-bottom: 1rem;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid #b5b5b5;\n\n  h1 {\n    margin-bottom: 1.25rem;\n  }\n`;\n","import React from 'react';\n\nimport { StyledHeader } from './styled';\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <h1>Carta de Demissão</h1>\n      <p>Insira seus dados no formulário abaixo para gerar um modelo para sua carta de demissão!</p>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled, { css } from 'styled-components';\n\nconst colors = {\n  border: {\n    default: '#b5b5b5',\n    active: '#286fde',\n    error: '#e22323'\n  },\n  font: '#383838'\n};\n\nexport const StyledForm = styled.form`\n  width: 100%;\n  margin-top: 1rem;\n\n  button {\n    display: inline-block;\n    padding: 0.5rem 1rem;\n    border: none;\n    border-radius: 2px;\n    background-color: #286fde;\n    font-size: 1rem;\n    font-weight: 600;\n    color: white;\n    text-align: center;\n    cursor: pointer;\n  }\n`;\n\nexport const StyledLabel = styled.label`\n  display: inline-block;\n  margin-bottom: 0.25rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: ${colors.font};\n`;\n\nexport const StyledTextInput = styled.input`\n  position: relative;\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  border: 1px solid ${colors.border.default};\n  border-radius: 2px;\n  background-color: white;\n  font-size: 1rem;\n  color: ${colors.font};\n  transition: all ease-in-out 210ms;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${colors.border.active};\n  }\n\n  &:focus {\n    box-shadow: 0 0 4px ${colors.border.active};\n  }\n`;\n\nexport const StyledRadioGroup = styled.div`\n  margin: 0 -0.25rem;\n`;\n\nexport const StyledRadioLabel = styled.label`\n  display: inline-block;\n  padding: 0.25rem;\n`;\n\nexport const StyledField = styled.div`\n  position: relative;\n  margin-bottom: 1.25rem;\n\n  small {\n    color: ${colors.border.error};\n  }\n\n  ${(props) =>\n    props.error &&\n    css`\n      ${StyledLabel} {\n        color: ${colors.border.error};\n      }\n\n      ${StyledTextInput} {\n        border-color: ${colors.border.error};\n      }\n    `}\n`;\n","import React from 'react';\n\nimport {\n  StyledLabel,\n  StyledField,\n  StyledTextInput,\n  StyledRadioGroup,\n  StyledRadioLabel\n} from '../styled';\n\nconst Field = ({ label, input, children }) => {\n  const type = input?.type || 'text';\n  const hasChoices = input?.choices;\n\n  return (\n    <StyledField error={input.error}>\n      {!hasChoices ? (\n        <React.Fragment>\n          <StyledLabel htmlFor={input.name}>{label}</StyledLabel>\n          <StyledTextInput type={type} {...input} id={input.name} />\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <StyledLabel>{label}</StyledLabel>\n          <StyledRadioGroup>\n            {input.choices.map((choice, index) => {\n              const { label, value } = choice;\n              const { name, ref } = input;\n\n              return (\n                <StyledRadioLabel key={index}>\n                  <input type=\"radio\" name={name} value={value} ref={ref} /> {label}\n                </StyledRadioLabel>\n              );\n            })}\n          </StyledRadioGroup>\n        </React.Fragment>\n      )}\n\n      {input.error && <small>Este campo é obrigatório</small>}\n    </StyledField>\n  );\n};\n\nexport default Field;\n","import React from 'react';\n\nimport Field from './sub/Field';\n\nimport { StyledForm } from './styled';\n\nconst Form = ({ onSubmit, fields }) => {\n  return (\n    <StyledForm onSubmit={onSubmit} data-testid=\"form\">\n      {fields.map((field, index) => {\n        const { label, input } = field;\n\n        return <Field label={label} input={input} key={index} />;\n      })}\n\n      <button type=\"submit\">Criar modelo</button>\n    </StyledForm>\n  );\n};\n\nexport default Form;\n","import styled, { css } from 'styled-components';\n\nexport const StyledLetter = styled.article`\n  width: 100%;\n  height: 100%;\n  padding: 1.5rem;\n  border: 1px solid #636363;\n  border-radius: 2px;\n  background-color: #f9f1dd;\n\n  * {\n    font-family: 'Kalam', sans-serif;\n  }\n\n  p {\n    margin: 0 0 2rem;\n    font-size: 1.25rem;\n    text-align: justify;\n\n    &.user-name {\n      margin-top: 3.25rem;\n      text-decoration: overline;\n    }\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  button {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    display: none;\n    padding: 0.25rem 0.5rem;\n    border: none;\n    border-radius: 2px;\n    background-color: black;\n    font-size: 0.875rem;\n    color: white;\n  }\n\n  @media screen and (max-width: 990px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    border: none;\n    border-radius: 0;\n    transition: all ease-in-out 210ms;\n\n    ${(props) =>\n      props.visible\n        ? css`\n            opacity: 1;\n            visibility: visible;\n          `\n        : css`\n            opacity: 0;\n            visibility: hidden;\n          `}\n\n    button {\n      display: inline-block;\n    }\n  }\n\n  @media screen and (min-width: 991px) {\n    * {\n      ${(props) =>\n        props.visible\n          ? css`\n              opacity: 1;\n              visibility: visible;\n            `\n          : css`\n              opacity: 0;\n              visibility: hidden;\n            `}\n    }\n  }\n`;\n","const months = [\n  'janeiro',\n  'fevereiro',\n  'março',\n  'abril',\n  'maio',\n  'junho',\n  'julho',\n  'agosto',\n  'setembro',\n  'outubro',\n  'novembro',\n  'dezembro'\n];\n\nexport default months;\n","const randomInt = (min, max) => {\n  return Math.floor(Math.random() * max) + min;\n};\n\nexport default randomInt;\n","import React from 'react';\n\nimport { StyledLetter } from './styled';\n\nimport intros from 'models/intros.json';\nimport reasons from 'models/reasons.json';\nimport notice from 'models/notice.json';\nimport acknowledgements from 'models/acknowledgements.json';\n\nimport months from 'constants/months';\nimport randomInt from 'helpers/randomInt';\n\nconst Letter = ({ user, visible, handleLetterVisibility }) => {\n  const renderReason = () => {\n    let string = reasons[user.reason];\n    string = string && string.replace('<#role#>', user.role.toUpperCase());\n\n    return string;\n  };\n\n  const dateString = `___________, ${new Date().getDate()} de ${\n    months[new Date().getMonth()]\n  } de ${new Date().getFullYear()}.`;\n\n  return (\n    <StyledLetter visible={visible} data-testid=\"letter\">\n      <button onClick={() => handleLetterVisibility(false)}>Fechar</button>\n\n      <p>\n        {intros[randomInt(0, intros.length)]} {user.company}\n      </p>\n\n      <p>Prezado(s) Senhor(es)</p>\n\n      <p>{renderReason()}</p>\n\n      <p>{notice[user.notice]}</p>\n\n      {Boolean(+user.acknowledgement) && (\n        <p>{acknowledgements[randomInt(0, acknowledgements.length)]}</p>\n      )}\n\n      <p className=\"date\">{dateString}</p>\n\n      <p className=\"user-name\">{user.name}</p>\n    </StyledLetter>\n  );\n};\n\nexport default Letter;\n","import React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport ReactGA from 'react-ga';\n\nimport Container from 'components/Container';\nimport Column from 'components/Column';\nimport Header from 'components/Header';\nimport Form from 'components/Form';\nimport Letter from 'components/Letter';\n\nconst App = () => {\n  const { register, handleSubmit, errors } = useForm();\n  const [user, setUser] = useState({\n    name: '',\n    role: '',\n    company: '',\n    reason: '',\n    notice: '',\n    acknowledgement: ''\n  });\n  const [isLetterVisible, setIsLetterVisible] = useState(false);\n\n  const onSubmit = (data) => {\n    setUser({ ...data });\n    setIsLetterVisible(true);\n\n    ReactGA.event({\n      category: 'Letter',\n      action: 'Created a model'\n    });\n  };\n\n  const handleLetterVisibility = (isVisible) => {\n    setIsLetterVisible(isVisible);\n  };\n\n  useEffect(() => {\n    ReactGA.pageview('/');\n  });\n\n  return (\n    <Container>\n      <Column>\n        <Header />\n\n        <Form\n          onSubmit={handleSubmit(onSubmit)}\n          fields={[\n            {\n              label: 'Seu nome',\n              input: {\n                name: 'name',\n                placeholder: 'Seu nome completo',\n                ref: register({ required: true }),\n                error: errors?.name\n              }\n            },\n\n            {\n              label: 'Seu cargo',\n              input: {\n                name: 'role',\n                placeholder: 'O cargo que você ocupa atualmente',\n                ref: register({ required: true }),\n                error: errors?.role\n              }\n            },\n\n            {\n              label: 'Nome da Empresa',\n              input: {\n                name: 'company',\n                placeholder: 'Razão Social ou Nome Fantasia',\n                ref: register({ required: true }),\n                error: errors?.company\n              }\n            },\n\n            {\n              label: 'Por que você está saindo da empresa?',\n              input: {\n                type: 'radio',\n                name: 'reason',\n                ref: register({ required: true }),\n                error: errors?.reason,\n                choices: [\n                  {\n                    label: 'Para estudar',\n                    value: 'study'\n                  },\n                  {\n                    label: 'Intercâmbio',\n                    value: 'travel'\n                  },\n                  {\n                    label: 'Motivos particulares',\n                    value: 'personal'\n                  }\n                ]\n              }\n            },\n\n            {\n              label: 'Vai cumprir aviso prévio?',\n              input: {\n                type: 'radio',\n                name: 'notice',\n                ref: register({ required: true }),\n                error: errors?.notice,\n                choices: [\n                  {\n                    label: 'Vou cumprir todo o aviso',\n                    value: 'full'\n                  },\n                  {\n                    label: 'Vou cumprir uma parte do aviso',\n                    value: 'custom'\n                  },\n                  {\n                    label: 'Não vou cumprir o aviso',\n                    value: 'none'\n                  }\n                ]\n              }\n            },\n\n            {\n              label: 'Quer deixar um agradecimento na carta?',\n              input: {\n                type: 'radio',\n                name: 'acknowledgement',\n                ref: register({ required: true }),\n                error: errors?.acknowledgement,\n                choices: [\n                  {\n                    label: 'Sim',\n                    value: 1\n                  },\n                  {\n                    label: 'Não',\n                    value: 0\n                  }\n                ]\n              }\n            }\n          ]}\n        />\n      </Column>\n      <Column>\n        <Letter\n          user={user || {}}\n          visible={isLetterVisible}\n          handleLetterVisibility={handleLetterVisibility}\n        />\n      </Column>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactGA from 'react-ga';\n\nimport { Reset } from 'assets/styled/reset';\nimport { Custom } from 'assets/styled/custom';\n\nimport App from './App';\n\nconst isLocal =\n  window.location.href.includes('localhost') || window.location.href.includes('127.0.0.1');\n\nReactGA.initialize('UA-116650364-9', { testMode: isLocal });\n\nReactDOM.render(\n  <React.Fragment>\n    <Reset />\n    <Custom />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}